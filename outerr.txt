~~~ PRUEBAS C√ÅTEDRA ~~~
Prueba hash crear hash vacio... OK
Prueba hash la cantidad de elementos es 0... OK
Prueba hash obtener clave A, es NULL, no existe... OK
Prueba hash pertenece clave A, es false, no existe... OK
Prueba hash borrar clave A, es NULL, no existe... OK
Prueba hash insertar clave1... OK
Prueba hash la cantidad de elementos es 1... OK
Prueba hash obtener clave1 es valor1: ERROR
pruebas_catedra.c:58: hash_obtener(hash, clave1) == valor1
Prueba hash obtener clave1 es valor1: ERROR
pruebas_catedra.c:59: hash_obtener(hash, clave1) == valor1
Prueba hash pertenece clave1, es true: ERROR
pruebas_catedra.c:60: hash_pertenece(hash, clave1)
Prueba hash borrar clave1, es valor1: ERROR
pruebas_catedra.c:61: hash_borrar(hash, clave1) == valor1
Prueba hash la cantidad de elementos es 0: ERROR
pruebas_catedra.c:62: hash_cantidad(hash) == 0
Prueba hash insertar clave2... OK
Prueba hash la cantidad de elementos es 1: ERROR
pruebas_catedra.c:66: hash_cantidad(hash) == 1
Prueba hash obtener clave2 es valor2: ERROR
pruebas_catedra.c:67: hash_obtener(hash, clave2) == valor2
Prueba hash obtener clave2 es valor2: ERROR
pruebas_catedra.c:68: hash_obtener(hash, clave2) == valor2
Prueba hash pertenece clave2, es true: ERROR
pruebas_catedra.c:69: hash_pertenece(hash, clave2)
Prueba hash insertar clave3... OK
Prueba hash la cantidad de elementos es 2: ERROR
pruebas_catedra.c:72: hash_cantidad(hash) == 2
Prueba hash obtener clave3 es valor3: ERROR
pruebas_catedra.c:73: hash_obtener(hash, clave3) == valor3
Prueba hash obtener clave3 es valor3: ERROR
pruebas_catedra.c:74: hash_obtener(hash, clave3) == valor3
Prueba hash pertenece clave3, es true: ERROR
pruebas_catedra.c:75: hash_pertenece(hash, clave3)
